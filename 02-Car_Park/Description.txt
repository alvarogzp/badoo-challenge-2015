Car Park

Sergey has just taken over the family car park and has noticed that many levels of the car park are empty for most of the day. He wants to introduce an automated system that will only open every level at peak times, to save electricity and make security easier. To do this, he first needs to work out when peak times are, how many cars are in the car park at that time, and what the car park is earning each day.

Checking the notice by the entrance, Sergey discovers that the first hour costs £2, and every 15 minutes after that (or part of) costs 50p, i.e. 61 minutes cost £2.50, 76 minutes cost £3, and so on. He also learns that the ticket barriers record what time each car arrives and what time it leaves.

Input
First line will contain the number of records (C). The car park is really old and its history starts from 29 January 1886 when Mersedes Benz invented the automobile to nowadays. So C could be 100000.
Each next line represents a record of a car in the car park with entry and exit time, separated with a dash and in the 24h format.
dd.mm.yyyy hh:mm - dd.mm.yyyy hh:mm
Entry time is always smaller than exit time. If one car enters car park and another leaves at the same moment, system tracks departure event and then entrance. If there were two moments with peak load, track the first one.

Output
How many cars are in the car park at peak time?
How much does the car park earn each day if it wasn't empty?
How many cars were there at peak time each day?
At what time did this happened?
And how much does the car park earn altogether for the total amount of days?

Limits
C <= 100 for small cases, C=100000 for large cases.
Example

Input:
15
19.09.2015 12:00:00 - 19.09.2015 12:59:59
20.09.2015 12:00:00 - 20.09.2015 13:00:00
21.09.2015 12:00:00 - 21.09.2015 13:01:00
22.09.2015 12:00:00 - 22.09.2015 13:26:00
23.09.2015 14:00:00 - 23.09.2015 15:16:00
24.09.2015 16:00:00 - 24.09.2015 16:00:01
25.09.2015 12:00:00 - 25.09.2015 14:00:00
25.09.2015 14:00:00 - 25.09.2015 15:00:01
26.09.2015 22:00:00 - 27.09.2015 10:12:00
28.09.2015 10:00:00 - 28.09.2015 10:00:01
28.09.2015 11:00:00 - 28.09.2015 13:00:00
28.09.2015 10:30:00 - 28.09.2015 14:00:00
29.09.2015 10:00:00 - 29.09.2015 10:00:00
29.09.2015 11:00:00 - 29.09.2015 13:00:00
29.09.2015 10:30:00 - 29.09.2015 14:00:00

Output:
19.09.2015 1 2.0
20.09.2015 1 2.0
21.09.2015 1 2.5
22.09.2015 1 3.0
23.09.2015 1 3.0
24.09.2015 1 2.0
25.09.2015 1 6.5
27.09.2015 1 24.5
28.09.2015 2 13.0
29.09.2015 2 13.0
PEAK 2 AT 28.09.2015
TOTAL 71.5

